#!/usr/bin/env python

<<<<<<< HEAD
import os
import robot_upstart

from catkin.find_in_workspaces import find_in_workspaces

main_job = robot_upstart.Job(workspace_setup=os.environ['ROBOT_SETUP'])
main_job.add(package="grizzly_base", filename="launch/base.launch")
main_job.add(package="grizzly_bringup", filename="launch/accessories.launch")
main_job.install()


class GrizzlyExtras(robot_upstart.providers.Generic):
    def generate_install(self):
        with open(find_in_workspaces(project="grizzly_bringup", path="can-udp-bridge.conf")[0]) as f:
            can_conf_contents = f.read()
        return { "/etc/init/can-udp-bridge.conf": {
            "content":  can_conf_contents,
            "mode": 0o644
            },
            "/etc/connman/main.conf": {
                "content": """[General]
NetworkInterfaceBlacklist=eth,br
PreferredTechnologies=wifi""",
                "mode": 0o644
                }}


other_job = robot_upstart.Job()
other_job.install(Provider=GrizzlyExtras)
=======
import robot_upstart
import os

j = robot_upstart.Job(workspace_setup=os.environ['ROBOT_SETUP'])

# Stuff to launch on system startup.
j.add(package="grizzly_bringup", glob="launch/core/*")
j.add(package="grizzly_base", glob="launch/*")
j.add(package="grizzly_motion", glob="launch/*")
j.add(package="grizzly_navigation", glob="launch/*")
j.add(package="grizzly_teleop", filename="launch/ps3nav_teleop.launch")

# Glob URDF on startup also (experimental)
j.add(package="grizzly_description", filename="urdf/base.urdf.xacro")

j.install()

"""
if [[ -n "$ROBOT_EXTRAS_PACKAGE" ]]; then
  echo "Installing extras specific to this robot from the $ROBOT_EXTRAS_PACKAGE package."
  rosrun "$ROBOT_EXTRAS_PACKAGE" install
fi
"""
>>>>>>> master
